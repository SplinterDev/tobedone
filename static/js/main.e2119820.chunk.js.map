{"version":3,"sources":["data.ts","providers/TasksProvider.tsx","components/TaskInput/TaskInput.tsx","bricks/TdCheck/TdCheck.tsx","components/TaskItem/TaskItem.tsx","components/TaskList/TaskList.tsx","components/Colors/Colors.tsx","components/App/App.tsx","index.tsx"],"names":["staticTasks","id","uuidv4","description","done","TasksContext","React","createContext","value","useTasksContext","tasks","useContext","update","TasksProvider","children","useState","setTasks","Provider","TaskInput","setValue","className","icon","faAlignLeft","type","placeholder","onKeyPress","e","key","newTask","oldTasks","onChange","target","TdCheck","checked","size","onClick","isChecked","setIsChecked","prev","style","fontSize","faCheck","TaskItem","task","old","map","t","faEllipsisH","TaskList","Colors","App","display","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2119820.chunk.js","sourcesContent":["import { TaskType } from './models/types'\nimport { v4 as uuidv4 } from 'uuid'\n\nexport const staticTasks: TaskType[] = [\n  {\n    id: uuidv4(),\n    description: 'Break into components',\n    done: true,\n  },\n  {\n    id: uuidv4(),\n    description: 'Create layout',\n    done: true,\n  },\n  {\n    id: uuidv4(),\n    description: 'Add task (simple text)',\n    done: true,\n  },\n  {\n    id: uuidv4(),\n    description: 'Mark task as done',\n    done: true,\n  },\n  {\n    id: uuidv4(),\n    description: 'Add context menu',\n    done: false,\n  },\n  {\n    id: uuidv4(),\n    description: 'Delete task',\n    done: false,\n  },\n  {\n    id: uuidv4(),\n    description: 'Edit task',\n    done: false,\n  },\n  {\n    id: uuidv4(),\n    description: 'Save to local storage',\n    done: false,\n  },\n  {\n    id: uuidv4(),\n    description: 'Undo task',\n    done: false,\n  },\n  {\n    id: uuidv4(),\n    description: 'Add details',\n    done: false,\n  },\n  {\n    id: uuidv4(),\n    description: 'Add date and time',\n    done: false,\n  },\n  {\n    id: uuidv4(),\n    description: 'Add subtasks',\n    done: false,\n  },\n  {\n    id: uuidv4(),\n    description: 'use Animations',\n    done: false,\n  },\n]\n","import React, { useContext, useState } from 'react'\nimport { TaskType } from '../models/types'\nimport { ContextSetterType, ContextType } from './providers'\nimport { staticTasks } from '../data'\n\nconst TasksContext = React.createContext<ContextType<TaskType[]>>({ value: [] })\n\nexport const useTasksContext = (): [\n  TaskType[],\n  ContextSetterType<TaskType[]> | undefined,\n] => {\n  const tasks = useContext(TasksContext)\n  return [tasks.value, tasks.update]\n}\nexport const useTasks = (): TaskType[] => {\n  const tasks = useContext(TasksContext)\n  return tasks.value\n}\n\ntype Props = {\n  children: React.ReactNode\n}\n\nconst TasksProvider = ({ children }: Props): JSX.Element => {\n  const [tasks, setTasks] = useState<TaskType[]>(staticTasks)\n  return (\n    <TasksContext.Provider value={{ value: tasks, update: setTasks }}>\n      {children}\n    </TasksContext.Provider>\n  )\n}\n\nexport default TasksProvider\n","import { faAlignLeft } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\nimport React, { useState } from 'react'\nimport { useTasksContext } from '../../providers/TasksProvider'\nimport './TaskInput.scss'\nimport { v4 as uuidv4 } from 'uuid'\n\nconst TaskInput = (): JSX.Element => {\n  const [value, setValue] = useState('')\n  const [tasks, setTasks] = useTasksContext()\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      const newTask = {\n        id: uuidv4(),\n        description: value,\n        done: false,\n      }\n\n      setTasks && setTasks((oldTasks) => [...oldTasks, newTask])\n      setValue('')\n    }\n  }\n\n  return (\n    <div className=\"TaskInput\">\n      <Icon className=\"icon\" icon={faAlignLeft} />\n      <input\n        type=\"text\"\n        placeholder=\"Add a task...\"\n        onKeyPress={handleKeyPress}\n        value={value}\n        onChange={(e) => setValue(e.target.value)}\n      />\n    </div>\n  )\n}\n\nexport default TaskInput\n","import React, { useState } from 'react'\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\nimport { faCheck } from '@fortawesome/free-solid-svg-icons'\nimport './TdCheck.scss'\n\ninterface Props {\n  checked: boolean\n  size?: number\n  onClick?: () => void\n}\n\nconst TdCheck = ({ checked, size = 1, onClick }: Props): JSX.Element => {\n  const [isChecked, setIsChecked] = useState(checked)\n\n  const handleClick = () => {\n    setIsChecked((prev) => !prev)\n    onClick && onClick()\n  }\n\n  return (\n    <div\n      className=\"TdCheck\"\n      onClick={handleClick}\n      style={{ fontSize: `${size - 0.3}rem` }}\n    >\n      {isChecked && (\n        <Icon style={{ fontSize: `${size - 0.3}rem` }} icon={faCheck} />\n      )}\n    </div>\n  )\n}\n\nexport default TdCheck\n","import React from 'react'\nimport './TaskItem.scss'\nimport { FontAwesomeIcon as Icon } from '@fortawesome/react-fontawesome'\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons'\nimport TdCheck from '../../bricks/TdCheck/TdCheck'\nimport { TaskType } from '../../models/types'\nimport { useTasksContext } from '../../providers/TasksProvider'\n\ninterface Props {\n  task: TaskType\n}\n\nconst TaskItem = ({ task }: Props): JSX.Element => {\n  const [tasks, setTasks] = useTasksContext()\n\n  const handleClick = () => {\n    setTasks &&\n      setTasks((old) =>\n        old.map((t) => (t.id === task.id ? { ...t, done: !t.done } : t)),\n      )\n  }\n\n  return (\n    <li className=\"TaskItem\">\n      <div className=\"checkbox\">\n        <TdCheck checked={task.done} onClick={handleClick} />\n      </div>\n      <div className=\"content\">{task.description}</div>\n      <div className=\"menu\">\n        <Icon className=\"icon\" icon={faEllipsisH} />\n      </div>\n    </li>\n  )\n}\n\nexport default TaskItem\n","import React from 'react'\nimport { useTasks } from '../../providers/TasksProvider'\nimport TaskItem from '../TaskItem/TaskItem'\nimport './TaskList.scss'\n\nconst TaskList = (): JSX.Element => {\n  const tasks = useTasks()\n\n  return (\n    <ul className=\"TaskList\">\n      {tasks.map((e) => (\n        <TaskItem task={e} key={e.id} />\n      ))}\n    </ul>\n  )\n}\n\nexport default TaskList\n","import React from 'react'\nimport './Color.scss'\n\nconst Colors = (): JSX.Element => {\n  return (\n    <div className=\"Color\">\n      <div className=\"color black\">black</div>\n      <div className=\"color charcoal\">charcoal</div>\n      <div className=\"color anchor\">anchor</div>\n      <div className=\"color smoke\">smoke</div>\n      <div className=\"color white\">white</div>\n    </div>\n  )\n}\n\nexport default Colors\n","import React from 'react'\nimport './App.scss'\nimport TaskInput from '../TaskInput/TaskInput'\nimport TaskList from '../TaskList/TaskList'\nimport Colors from '../Colors/Colors'\nimport TasksProvider from '../../providers/TasksProvider'\n\nfunction App(): JSX.Element {\n  return (\n    <TasksProvider>\n      <div id=\"App\">\n        <TaskInput />\n        <TaskList />\n        <div style={{ display: 'none' }}>\n          <Colors />\n        </div>\n      </div>\n    </TasksProvider>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App/App'\nimport './index.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}